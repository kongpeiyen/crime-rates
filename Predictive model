# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
import warnings
warnings.filterwarnings('ignore')

#Installing pmdarima package
get_ipython().system(' pip install pmdarima')

# Importing auto_arima 
from pmdarima.arima import auto_arima

#Read the crime dataset --> IMPORT OUR DATA SET HERE
sales_data = pd.read_csv('/content/data/residential_b2020.csv')

#Convert the month column to datetime and set the index of the Month 
sales_data['MONTH']=pd.to_datetime(sales_data['MONTH'])
sales_data.set_index('MONTH',inplace=True) 

#To understand the pattern
sales_data.plot()

#Testing for stationarity --> it should say 'False'
from pmdarima.arima import ADFTest
adf_test = ADFTest(alpha = 0.05)
adf_test.should_diff(sales_data)

#Spliting the dataset into train and test --> OUR DATA + CHANGE NUMBER IN BRACKETS 
train = sales_data['01 2015': '01 2020']
test = sales_data['01 2020':] 

#Building ARIMA model 
arima_model =  auto_arima(train,start_p=0, d=1, start_q=0, 
                          max_p=5, max_d=5, max_q=5, start_P=0, 
                          D=1, start_Q=0, max_P=5, max_D=5,
                          max_Q=5, m=12, seasonal=True, 
                          error_action='warn',trace = True,
                          supress_warnings=True,stepwise = True,
                          random_state=20,n_fits = 50 )
arima_model.summary()

#Finding predicted crime values 
prediction = pd.DataFrame(arima_model.predict(n_periods = 12),index=test.index)
prediction.columns = ['predicted_sales']
prediction

#Finding prediction interval
conf_int  = arima_model.predict(11,return_conf_int=True,alpha=0.05)
print(conf_int)

#save prediction interval array as csv file
from numpy import asarray
from numpy import savetxt
#define interval
interval = asarray('conf_int')
# save to csv file
savetxt('interval.csv', data, delimiter=',')

#add columns name
import pandas as pd
df = pd.read_csv('interval.csv', header=None)
df.rename(columns={0: 'min', 1: 'max'}, inplace=True)
df.to_csv('interval_with_col.csv', index=False) 

# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
import warnings
warnings.filterwarnings('ignore')
interval = pd.read_csv('/content/interval_with_col.csv')
interval.head()

#Plotting predicted values and real values from 2020
plt.figure(figsize=(8,5))
plt.plot(prediction,label="Without COVID trend")
plt.plot(sales_data,label="Real trend")
plt.legend(loc = 'Left corner')
plt.title("RESIDENTIAL BURGLARIES FROM 2015 TO 2020 IN LONDON")
plt.xlabel("Time")
plt.ylabel("Residential burglary's values")
plt.show()

#Finding r2 --> OUR DATA
from sklearn.metrics import r2_score
test['predicted_sales'] = prediction
r2_score(test['Champagne sales'], test['predicted_sales'])




