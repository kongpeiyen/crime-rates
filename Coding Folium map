Link to reference: https://python-graph-gallery.com/292-choropleth-map-with-folium/
More detailed instructions: https://python-visualization.github.io/folium/modules.html
Chloropleth in Folium: https://python-visualization.github.io/folium/quickstart.html#Choropleth-maps
Explanation process: https://www.youtube.com/watch?v=4RnU5qKTfYY

[1]
import pandas as pd
import folium
import os

[2]
#Cleaning the data
crime = pd.read_csv('/content/data/MPS Borough Level Crime (most recent 24 months) (1).csv', index_col=0)
crime

crime.rename(columns={"LookUp_BoroughName": "Boroughs"}, inplace=True)
crime.rename(columns={"MajorText": "Crime type"}, inplace=True)

crime.drop (['MinorText', "201812", "201901", "201902", "201903", "201904", "201905", "201906", "201907", "201908", "201909", "201910", "201911", "201912"], axis=1, inplace=True)
crime.drop(
    labels=["Arson and Criminal Damage", "Miscellaneous Crimes Against Society", "Possession of Weapons", "Public Order Offences", "Robbery", "Theft", "Vehicle Offences", "Violence Against the Person"],
    axis=0,
    inplace=True
)
crime.head()

crime.groupby(['Boroughs',"MajorText"]).sum


covidcases = pd.read_csv("/content/data/phe_cases_london_boroughs.csv")
covidcases

covidcases.drop(covidcases.index[0:9664], inplace=True)
clean = covidcases[['area_name','total_cases']]
pd.set_option("display.max_rows", None, "display.max_columns", None)
clean



# Variables
boroughs = os.path.join("london_boroughs.json")
crime = os.path.join("content", "phe_cases_london_boroughs.csv")

[3]
# Need to load the rate of each crime 
Borough_type of crime = os.path.join('/Users/y.holtz/Desktop/ (place of file)', 'name of file')
state_data = pd.read_csv(state_unemployment)

[4]
# Create map object
m = folium.Map(location=[51.5074, 0.1278], zoom_start=10)
# you can add parameters like tiles or markers with each their colours and symbol
# Need to import the csv file of our dataset (name of boroughs must match id in json file but can change id)

[5]
# Create the chloropleth function
folium.Choropleth(
    boroughs,
    name='COVID-19 infections',
    data=clean,
    columns=['area_name', 'total_cases'],
    key_on='name',
    fill_color='YlGn',
    fill_opacity=0.7,
    line_opacity=0.5,
    legend_name='Covid infections'
).add_to(m)

m

# Save map as html
m.save("map.html")

--> Add the layers
--> Do it 3 times for the three types of crime

